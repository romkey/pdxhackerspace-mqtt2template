<%
@_camera = ERB.new(File.new("/templates/_camera.erb").read)
%>
<!doctype html>
<html lang="en" data-bs-theme="dark">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>PDX Hackerspace Outside Views</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        .image-container img {
            width: 100%;
            height: auto;
            max-width: 500px; /* Set a max size for the image */
            min-width: 100px;  /* Set a min size for the image */
        }
    </style>
    <script>
function reloadImagesBySelector(selector) {
  const images = document.querySelectorAll(selector);
  images.forEach(img => {
    const src = img.src;
    img.src = '';
    // Force browser to fetch the image again by adding a cache-busting parameter
    img.src = src.includes('?') 
      ? src.split('?')[0] + '?cache=' + new Date().getTime() 
      : src + '?cache=' + new Date().getTime();
  });
}

setInterval(() => {
    console.log(`Reloading images matching ".auto-refresh" at ${new Date().toLocaleTimeString()}`);
    reloadImagesBySelector(".auto-refresh");
    console.log('Updating JSON');
    fetchAndUpdateData();
  }, 60000);

        function updateElementsWithJsonData(jsonData) {
            const elements = document.querySelectorAll('[data-json-key]');
            
            elements.forEach(element => {
                const key = element.getAttribute('data-json-key');
                
                if (key in jsonData) {
                    // Update the element's content with the JSON value
                    element.textContent = jsonData[key];
                }
            });
        }

        async function fetchAndUpdateData() {
            const urlInput = "http://outside.ctrlh/data.json";

            try {
                const response = await fetch(urlInput);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                
	    	console.log("fetching JSON successful");
	                
                const jsonData = await response.json();
                updateElementsWithJsonData(jsonData);

                const timestampElements = document.querySelectorAll('[data-json-key="timestamp"]');

		const now = new Date();
                const hours = String(now.getHours()).padStart(2, '0');
                const minutes = String(now.getMinutes()).padStart(2, '0');
                const seconds = String(now.getSeconds()).padStart(2, '0');
                const dayOfWeek = new Intl.DateTimeFormat('en-US', { weekday: 'long' }).format(now);
                const year = now.getFullYear();
                const month = String(now.getMonth() + 1).padStart(2, '0');
                const day = String(now.getDate()).padStart(2, '0');
                const formattedTime = `${hours}:${minutes}:${seconds} ${dayOfWeek} ${year}-${month}-${day}`;

                timestampElements.forEach(element => {
                    element.textContent = formattedTime;
                });
            } catch (error) {
                console.error('Error fetching JSON:', error);
            }
        }
    </script>
  </head>
  <body>
    <div class="container">
      <div class="row text-center">
        <h1>PDX Hackerspace Outside Cameras</h1>
	<p><span data-json-key="temperature"><%= data["temperature"] %></span>Â°F <span data-json-key="humidity"><%= data["humidity"] %></span>% <span data-json-key="conditions"><%= data["conditions"] %></span></p>
	<p>
          <% now = Time.now %>
          <span data-json-key='timestamp'><%= now.strftime('%H:%M:%S') %> <%= now.strftime('%A') %> <%= now.strftime('%Y-%m-%d') %></span>
        </p>
      </div>
    </div>
    <div class="container mt-4">
        <div class="row">

	      <%= @_camera.result_with_hash({image_path: "images/gate.jpg", name: "Gate"}) %>
	      <%= @_camera.result_with_hash({image_path: "images/russet-ef.jpg", name: "N Russet E"}) %>
	      <%= @_camera.result_with_hash({image_path: "images/russet-wf.jpg", name: "N Russet W"}) %>
	      <%= @_camera.result_with_hash({image_path: "images/parking.jpg", name: "N Russet Parking"}) %>

	      <%= @_camera.result_with_hash({image_path: "images/sf1.jpg", name: "Interstate SF1"}) %>
	      <%= @_camera.result_with_hash({image_path: "images/front.jpg", name: "Front Door"}) %>
	      <%= @_camera.result_with_hash({image_path: "images/s2-entry.jpg", name: "Front Door Entry"}) %>

	      <%= @_camera.result_with_hash({image_path: "images/sf2.jpg", name: "Interstate SF2"}) %>
	      <%= @_camera.result_with_hash({image_path: "images/nf1.jpg", name: "Interstate NF1"}) %>
	      <%= @_camera.result_with_hash({image_path: "images/craft-lab-entry.jpg", name: "Craft Lab Entry"}) %>

	      <%= @_camera.result_with_hash({image_path: "images/nf2.jpg", name: "Interstate NF2"}) %>
	      <%= @_camera.result_with_hash({image_path: "images/woodshop-entry.jpg", name: "Woodshop Entry"}) %>

        </div>
      <div class="row">
	 <p class="text-center">
	   <a href="https://github.com/romkey/pdxhackerspace-mqtt2template">Implementation on Github</a>
         </p>
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bs5-lightbox@1.8.3/dist/index.bundle.min.js"></script>
  </body>
</html>
